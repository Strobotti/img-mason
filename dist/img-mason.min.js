!function(factory){"object"==typeof module&&module.exports?module.exports=factory():window.ImgMason=factory()}(function(){"use strict";return function(selector,options){function getImgAspectRatio(img){return getImgWidth(img)/getImgHeight(img)}const extend=function(defaults,options){var prop,extended={};for(prop in defaults)Object.prototype.hasOwnProperty.call(defaults,prop)&&(extended[prop]=defaults[prop]);for(prop in options)Object.prototype.hasOwnProperty.call(options,prop)&&(extended[prop]=options[prop]);return extended},getImgWidth=function(img){return parseInt(img.getAttribute("width"))},getImgHeight=function(img){return parseInt(img.getAttribute("height"))},settings=extend({startOffset:0,rowMinAspectRatio:3.5},options);for(var container=document.querySelector(selector),imgs=container.getElementsByTagName("img"),index=settings.startOffset;index<imgs.length;index++){var rowRealWidth=0,rowRealHeight=0,subIndex=index-1,imagesInRow=1;do subIndex++,rowRealWidth+=getImgWidth(imgs[subIndex]),rowRealHeight=Math.max(rowRealHeight,getImgHeight(imgs[subIndex])),imagesInRow=Math.max(imagesInRow,subIndex-index);while(rowRealWidth/rowRealHeight<settings.rowMinAspectRatio&&subIndex+1<imgs.length);imgs.length-(imagesInRow+index)===1&&(imagesInRow>2?imagesInRow--:imagesInRow++);for(var sumAspectRatios=0,i=0;imagesInRow>i;i++)sumAspectRatios+=getImgAspectRatio(imgs[index+i]);for(imgs[index].style.clear="left",i=0;imagesInRow>i;i++){var width=getImgAspectRatio(imgs[index+i])/sumAspectRatios*100;imgs[index+i].style.width=width+"%",imgs[index+i].style.height="auto",imgs[index+i].style["float"]="left",imgs[index+i].style.display="block"}index+=imagesInRow-1}}});